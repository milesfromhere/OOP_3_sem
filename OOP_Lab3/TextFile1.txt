1. Свойства внутренних и вложенных классов:
   - Внутренние классы (nested classes) имеют доступ ко всем членам внешнего класса, включая приватные.
   - Вложенные классы могут быть публичными, приватными или иметь любой другой уровень доступа, как и обычные классы.
   - Объекты вложенных классов могут быть созданы только через экземпляр внешнего класса, если вложенный класс не является статическим.
   - Вложенные классы полезны для группировки логически связанных классов.

2. Что такое статический класс и его свойства:
   - Статический класс — это класс, который не может быть инстанцирован (нельзя создать объект).
   - Все члены статического класса должны быть статическими.
   - Используется для хранения методов и данных, которые общие для всех объектов или не относятся к конкретному объекту.
   - Такие классы не могут содержать конструкторы экземпляров, но могут иметь статические конструкторы.

3. Назначение перегрузки операторов:
   - Перегрузка операторов позволяет определить, как операторы (например, `+`, `-`, ``, `==`, `!=`) будут работать с пользовательскими типами (классами, структурами).
   - Это позволяет сделать пользовательские классы более интуитивными и удобными в использовании, аналогично встроенным типам.

4. Как используется ключевое слово `operator`:
   - Ключевое слово `operator` используется для объявления перегруженной версии оператора для пользовательского типа. Например:
     ```csharp
     public static Set operator +(Set a, Set b)
     {
         // Код для сложения двух множеств
     }
     ```

5. Операции, которые нельзя перегружать в C#:
   - Тернарный оператор `?:`
   - Операции присваивания, такие как `=`, `+=`, `-=`
   - Оператор доступа к членам `.` (точка)
   - Оператор `typeof`
   - Оператор `sizeof`

6. Можно ли перегрузкой отменить очередность выполнения операции?:
   - Нет, перегрузка операторов не изменяет приоритет выполнения операций, они выполняются в той же последовательности, как и встроенные операторы.

7. Операция `>=` может быть перегружена?:
   - Да, операция `>=` может быть перегружена в паре с оператором `<=`.

8. Сколько аргументов требуется для перегруженной унарной операции?:
   - Унарные операции принимают один аргумент.

9. Можно ли перегружать операцию `[]`?:
   - Нет, оператор `[]` не перегружается напрямую, но можно использовать индексаторы для этой функциональности.

10. Можно ли перегружать операцию `->`?:
    - Нет, оператор `->` (используемый в указателях) не может быть перегружен в C#.

12. Что такое метод расширения? Как и где его можно использовать?:
    - Метод расширения — это метод, который "расширяет" функциональность существующего типа без изменения его исходного кода.
    - Определяется как статический метод в статическом классе, а первый параметр метода содержит ключевое слово `this`, указывающее на тип, который будет расширяться.
    - Пример:
      ```csharp
      public static class StringExtensions
      {
          public static int WordCount(this string str)
          {
              return str.Split(' ').Length;
          }
      }
      ```
    - Используется как будто это метод самого типа: `"Hello World".WordCount();`

14. Выберите верное утверждение про метод расширения:
    - Верный ответ: 1) может получать доступ к `public` членам расширяемого класса.

15. Неверное правило перегрузки операторов:
    - Неверное утверждение: 4) должны объявляться как `protected` — операторы должны объявляться как `public`.